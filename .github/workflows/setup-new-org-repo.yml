# This is a basic workflow to help you get started with Actions

name: Create 

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      username:
        description: 'A username passed from the caller workflow'
        default: 'john-doe'
        required: false
      org:
        default: 'john-doe'
        required: false
      repo-name:
        default: 'john-doe'
        required: false

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  call-create-org-repo:
    uses: ci-cd-scripts/called-workflows/.github/workflows/create-org-repo.yml@v1
    with:
      username: ${{ inputs.username }}
    secrets:
      caller-token: ${{ secrets.TOKEN }}
#  call-workflow-2:
#    uses: octo-org/another-repo/.github/workflows/workflow-2.yml@v1
  
#  # This workflow contains a single job called "build"
#  build:
#    # The type of runner that the job will run on
#    runs-on: ubuntu-latest
#
#    # Steps represent a sequence of tasks that will be executed as part of the job
#    steps:
#      - name: GitHub Script
#        uses: actions/github-script@v5.0.0
#        with:
#          # The script to run
#          script: |
#            octokit.rest.actions.createWorkflowDispatch({
#              owner: "KevinMSampson",
#              repo: "scotty",
#              workflow_id: "new-org-repo.yml",
#              ref: "ref",
#              inputs: {
#                
#              }
#            });
#          # The GitHub token used to create an authenticated client
#           github-token: # optional, default is ${{ github.token }}
#          # Whether to tell the GitHub client to log details of its requests
#           debug: # optional
#          # An optional user-agent string
#           user-agent: # optional, default is actions/github-script
#          # A comma-separated list of API previews to accept
#           previews: # optional
#          # Either "string" or "json" (default "json")â€”how the result will be encoded
#           result-encoding: # optional, default is json
